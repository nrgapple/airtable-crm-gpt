openapi: "3.1.0"
info:
  version: 1.0.0
  title: Personal CRM - Teammates, Events, Goals, Achievements, and Milestones
  description: API schema for managing teammates, events, goals, achievements, and milestones in Airtable
  license:
    name: MIT
servers:
  - url: https://api.airtable.com/v0/applTffQqnZ7Husui

paths:
  /Teammates:
    get:
      summary: List all teammates
      operationId: listTeammates
      tags:
        - Teammates
      responses:
        "200":
          description: A list of teammates
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeammateList"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create one or more teammates
      operationId: createTeammates
      tags:
        - Teammates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                records:
                  type: array
                  description: Array of teammate records to create
                  items:
                    type: object
                    properties:
                      fields:
                        $ref: "#/components/schemas/Teammate"
      responses:
        "201":
          description: Created teammate(s)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeammateList"

  /Teammates/{teammateId}:
    patch:
      summary: Update a specific teammate
      operationId: updateTeammate
      tags:
        - Teammates
      parameters:
        - name: teammateId
          in: path
          required: true
          description: The ID of the teammate to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fields:
                  $ref: "#/components/schemas/Teammate"
                typecast:
                  type: boolean
                  description: "Enable automatic data conversion"
      responses:
        "200":
          description: Updated teammate record
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeammateRecord"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /Events:
    get:
      summary: List all events
      operationId: listEvents
      tags:
        - Events
      responses:
        "200":
          description: A list of events
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventList"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create one or more events
      operationId: createEvents
      tags:
        - Events
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                records:
                  type: array
                  description: Array of event records to create
                  items:
                    type: object
                    properties:
                      fields:
                        $ref: "#/components/schemas/Event"
      responses:
        "201":
          description: Created event(s)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventList"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /Events/{eventId}:
    get:
      summary: Retrieve a specific event
      operationId: getEvent
      tags:
        - Events
      parameters:
        - name: eventId
          in: path
          required: true
          description: The ID of the event to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Event details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventRecord"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a specific event
      operationId: updateEvent
      tags:
        - Events
      parameters:
        - name: eventId
          in: path
          required: true
          description: The ID of the event to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fields:
                  $ref: "#/components/schemas/Event"
                typecast:
                  type: boolean
                  description: "Enable automatic data conversion"
      responses:
        "200":
          description: Updated event record
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventRecord"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /Goals:
    get:
      summary: List all goals
      operationId: listGoals
      tags:
        - Goals
      responses:
        "200":
          description: A list of goals
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoalList"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create one or more goals
      operationId: createGoals
      tags:
        - Goals
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                records:
                  type: array
                  description: Array of goal records to create
                  items:
                    type: object
                    properties:
                      fields:
                        $ref: "#/components/schemas/Goal"
      responses:
        "201":
          description: Created goal(s)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoalList"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /Goals/{goalId}:
    get:
      summary: Retrieve a specific goal
      operationId: getGoal
      tags:
        - Goals
      parameters:
        - name: goalId
          in: path
          required: true
          description: The ID of the goal to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Goal details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoalRecord"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a specific goal
      operationId: updateGoal
      tags:
        - Goals
      parameters:
        - name: goalId
          in: path
          required: true
          description: The ID of the goal to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fields:
                  $ref: "#/components/schemas/Goal"
                typecast:
                  type: boolean
                  description: "Enable automatic data conversion"
      responses:
        "200":
          description: Updated goal record
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoalRecord"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /Achievements:
    get:
      summary: List all achievements
      operationId: listAchievements
      tags:
        - Achievements
      responses:
        "200":
          description: A list of achievements
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AchievementList"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: These are good things that my teammates have done.
      operationId: createAchievements
      tags:
        - Achievements
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                records:
                  type: array
                  description: Array of achievement records to create
                  items:
                    type: object
                    properties:
                      fields:
                        $ref: "#/components/schemas/Achievement"
      responses:
        "201":
          description: Created achievement(s)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AchievementList"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /Achievements/{achievementId}:
    get:
      summary: Retrieve a specific achievement
      operationId: getAchievement
      tags:
        - Achievements
      parameters:
        - name: achievementId
          in: path
          required: true
          description: The ID of the achievement to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Achievement details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AchievementRecord"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a specific achievement
      operationId: updateAchievement
      tags:
        - Achievements
      parameters:
        - name: achievementId
          in: path
          required: true
          description: The ID of the achievement to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fields:
                  $ref: "#/components/schemas/Achievement"
                typecast:
                  type: boolean
                  description: "Enable automatic data conversion"
      responses:
        "200":
          description: Updated achievement record
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AchievementRecord"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /Milestones:
    get:
      summary: List all milestones
      operationId: listMilestones
      tags:
        - Milestones
      responses:
        "200":
          description: A list of milestones
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MilestoneList"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create one or more milestones
      operationId: createMilestones
      tags:
        - Milestones
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                records:
                  type: array
                  description: Array of milestone records to create
                  items:
                    type: object
                    properties:
                      fields:
                        $ref: "#/components/schemas/Milestone"
      responses:
        "201":
          description: Created milestone(s)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MilestoneList"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /Milestones/{milestoneId}:
    get:
      summary: Retrieve a specific milestone
      operationId: getMilestone
      tags:
        - Milestones
      parameters:
        - name: milestoneId
          in: path
          required: true
          description: The ID of the milestone to retrieve
          schema:
            type: string
      responses:
        "200":
          description: Milestone details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MilestoneRecord"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    patch:
      summary: Update a specific milestone
      operationId: updateMilestone
      tags:
        - Milestones
      parameters:
        - name: milestoneId
          in: path
          required: true
          description: The ID of the milestone to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fields:
                  $ref: "#/components/schemas/Milestone"
                typecast:
                  type: boolean
                  description: "Enable automatic data conversion"
      responses:
        "200":
          description: Updated milestone record
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MilestoneRecord"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Teammate:
      type: object
      properties:
        Name:
          type: string
        Notes:
          type: string
        Job Title:
          type: string
        Events:
          type: array
          items:
            type: string
        Goals:
          type: array
          items:
            type: string
        Achievements:
          type: array
          items:
            type: string
        created:
          type: string
          format: date-time

    TeammateList:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: "#/components/schemas/TeammateRecord"

    TeammateRecord:
      type: object
      properties:
        id:
          type: string
        fields:
          $ref: "#/components/schemas/Teammate"
        createdTime:
          type: string
          format: date-time

    Event:
      type: object
      properties:
        Name:
          type: string
        Notes:
          type: string
        Happened On:
          type: string
          format: date
        Teammate:
          type: array
          items:
            type: string
        Created:
          type: string
          format: date-time

    EventList:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: "#/components/schemas/EventRecord"

    EventRecord:
      type: object
      properties:
        id:
          type: string
        fields:
          $ref: "#/components/schemas/Event"
        createdTime:
          type: string
          format: date-time

    Goal:
      type: object
      properties:
        Name:
          type: string
        Notes:
          type: string
        Complete by:
          type: string
          format: date
        Completed:
          type: boolean
        Teammate:
          type: array
          items:
            type: string
        Created:
          type: string
          format: date-time

    GoalList:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: "#/components/schemas/GoalRecord"

    GoalRecord:
      type: object
      properties:
        id:
          type: string
        fields:
          $ref: "#/components/schemas/Goal"
        createdTime:
          type: string
          format: date-time

    Achievement:
      type: object
      properties:
        Name:
          type: string
        Notes:
          type: string
        Teammate:
          type: array
          items:
            type: string
        Completed on:
          type: string
          format: date
        Created:
          type: string
          format: date-time
        Milestones:
          type: array
          items:
            type: string

    AchievementList:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: "#/components/schemas/AchievementRecord"

    AchievementRecord:
      type: object
      properties:
        id:
          type: string
        fields:
          $ref: "#/components/schemas/Achievement"
        createdTime:
          type: string
          format: date-time

    Milestone:
      type: object
      properties:
        Name:
          type: string
        Notes:
          type: string
        Achievements:
          type: array
          items:
            type: string
        Link:
          type: string
          format: url

    MilestoneList:
      type: object
      properties:
        records:
          type: array
          items:
            $ref: "#/components/schemas/MilestoneRecord"

    MilestoneRecord:
      type: object
      properties:
        id:
          type: string
        fields:
          $ref: "#/components/schemas/Milestone"
        createdTime:
          type: string
          format: date-time

    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
